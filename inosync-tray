#! /bin/bash
licence="
# +------------------------------------------------------------------------------------------------------------+
# |
# |This program is free software: you can redistribute it and/or modify
# |it under the terms of the GNU General Public License as published by
# |the Free Software Foundation, either version 3 of the License, or
# |(at your option) any later version.
# |
# |This program is distributed in the hope that it will be useful,
# |but WITHOUT ANY WARRANTY; without even the implied warranty of
# |MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# |GNU General Public License for more details.
# |
# +------------------------------------------------------------------------------------------------------------+"
author="MerMouY"
author_mail="mermouy [at] gmail .com"
args="$@"
ino_dir="$HOME/.config/inosync-gui"
ino_conf_dir="${ino_dir}/conf"
ino_icons_dir="${ino_dir}/icons"
appname="$0"
tmp="/tmp/inosync-tray"
if [[ ! -d ${tmp} ]]; then
	mkdir ${tmp} || echo "Error initializing temp dir" && sleep 3 && exit 1
fi
# create a FIFO file, used to manage the I/O redirection from shell
mypipe=$(mktemp -u --tmpdir ${0##*/}.XXXXXXXX)
mkfifo ${mypipe}

# attach a file descriptor to the file
exec 3<> ${mypipe}

# add handler to manage process shutdown
on_exit() {
    echo "quit" >&3
    rm -f ${mypipe}
}
trap on_exit EXIT

# add handler for tray icon left click
on_click() {
    exit 0
}
export -f on_click

inosync() {
python /usr/local/bin/inosync.py -c "$1"
}

#Get actives synchronistaions
actives_sync() {
for d in ${ino_conf_dir}/*.conf;do
	grep 'SyncEnable="true"' "${d}" >/dev/null && echo "$d" >> ${tmp}/.activ_list
done
}

update_state(){
echo prout
}

start_all() {
actives_sync || message xerror "No conf found"
for d in $(cat ${tmp}/.activ_list); do
	inosync -c ${d} &syncpid=$!
	echo "${syncpid}">> ${tmp}/.pid_list
done
}

kill_all() {
for pid in $(cat ${tmp}/.pid_list 2>/dev/null);do
	kill "${pid}"
# TODO: remove this
	echo "killed ${pid}" >> /tmp/killed
done
rm -rf ${tmp}
}
export -f kill_all

kill_and_exit() {
kill_all
exit 0
}
export -f kill_and_exit

start_icon() {
yad --notification \
	--listen \
	--menu="${menu_basic}" \
    --image-path="${ino_icons_dir}" --image="inosync-gui_32" \
    --text="Manage your synchronisations" \
    --command="bash -c on_click" <&3
}
export -f start_icon

# Verify icon exist
verify_pid() {
if [[ -z "$INO_TRAY_PID" ]]; then
	return 0
else return 1
fi
}

actives_sync
if [[ -f ${tmp}/.pid_list ]] && [[ -f ${tmp}/.activ_list ]];then
	menu_basic="Edit Sync Configuration!./inosync-gui --edit!gtk-edit|Start all enable Sync (listed below)!bash -c start_all!view-refresh|Shutdown all enable Sync!bash -c kill_all!gtk-close|Shutdown all enable Sync and exit!bash -c kill_and_exit!gtk-quit"
elif [[ ! -f ${tmp}/.pid_list ]] && [[ -f ${tmp}/.activ_list ]];then
	menu_basic="Edit Sync Configuration!./inosync-gui --edit!gtk-edit|Start all enable Sync (listed below)!bash -c start_all!view-refresh|Shutdown all enable Sync and exit!bash -c kill_and_exit!gtk-quit"
elif [[ -f ${tmp}/.pid_list ]] && [[ ! -f ${tmp}/.activ_list ]];then
	menu_basic="Edit Sync Configuration!./inosync-gui --edit!gtk-edit|Shutdown all enable Sync!bash -c kill_all!gtk-close|Shutdown all enable Sync and exit!bash -c kill_and_exit!gtk-quit"
elif [[ ! -f ${tmp}/.pid_list ]] && [[ ! -f ${tmp}/.activ_list ]];then
	menu_basic="Edit Sync Configuration!./inosync-gui --edit!gtk-edit|Shutdown all enable Sync and exit!bash -c kill_and_exit!gtk-quit"
fi

# Verify args
if [ -z "${args}" ]; then
	verify_pid && start_icon
else
		a=0
		for arg in "${args}";do
			let a=$a+1
			desk_file=$(echo "${args} " | sed 's/.conf /.desktop/')
			name=$(cat ${desk_file} | grep Name= | sed 's/Name=//')
			icon=$(cat ${desk_file} | grep Icon= | sed 's/Icon=//;s/.png/_16.png/')
			menu_add=$(echo "menu:${menu_basic}|${name}!bash -c inosync ${args}!$icon")
			verify_pid && start_icon &
			printf "${menu_add}" >&3
			added_list[$a]="${name}"
		done
		notify-send -a Inosync-gui -i "${ino_icons_dir}"/inosync-gui_64.png -t 3000 "${#added_list[@]} Configuration(s) added" "to enable sync list, use right click on icon to start synchronization."
fi